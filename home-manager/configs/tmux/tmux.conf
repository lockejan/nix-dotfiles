# Setting the prefix from C-b to C-a
# set-option -g prefix C-a
# bind-key C-a last-window
unbind-key C-b

# Ensure tmux uses always home dir for new windows
bind-key c new-window -c ~

# set default directory for new windows in this session to current directory:
bind M-c attach-session -c "#{pane_current_path}"

# Ensure that we can send C-a to other apps
bind-key a send-prefix

# Setting the delay between prefix and command
# set -s escape-time 0

# key repeat listen time
# set-option -g repeat-time 5

# scrollback buffer size
# set -g history-limit 50000

# Reduce time to wait for escape key. handy for neovim
# set-option escape-time 40

# renumber windows when a window is closed
# set -g renumber-windows off

# Set the base for windos to 1 instead of 0
# set -g base-index 1

# Set the base index for panes to 1 instead of 0
# setw -g pane-base-index 1

# shortcut for synchronize-panes toggle
bind C-p set-window-option synchronize-panes

# source tmux
bind r source-file ~/.config/tmux/tmux.conf \; display "config reloaded!"

# shortcut to kill pane
#bind x killp

# disable autoscroll to bottom when selecting in copy mode
bind-key -T copy-mode-vi MouseDragEnd1Pane send-keys -X copy-selection -x

# split panes with | and -
bind "\\" split-window -h
bind "'" split-window -v

# split pane and retain the current dir of existing pane
bind "|" split-window -h -c "#{pane_current_path}"
bind "\"" split-window -v -c "#{pane_current_path}"

# pane movement
bind C-i command-prompt -p "join pane from:"  "join-pane -s '%%'"
bind C-m command-prompt -p "send pane to:"  "join-pane -t '%%'"
# window movement
bind-key M command-prompt -p "swap window with:"  "swap-window -t '%%'"

# quick win select
# bind -r C-h select-window -t :-
# bind -r C-l select-window -t :+

bind -r H resize-pane -L 5
bind -r J resize-pane -D 5
bind -r K resize-pane -U 5
bind -r L resize-pane -R 5

set -g mouse on
bind-key m set-option -g mouse \; display "Mouse: #{?mouse,ON,OFF}"

# neovim add-ons
# set -g default-terminal "tmux-256color"
set -as terminal-overrides ',*:Tc'
set -as terminal-overrides ',*:Smulx=\E[4::%p1%dm'  # undercurl support
set -as terminal-overrides ',*:Setulc=\E[58::2::%p1%{65536}%/%d::%p1%{256}%/%{255}%&%d::%p1%{255}%&%d%;m'  # underscore colours - needs tmux-3.0

setw -g xterm-keys on

set-option -g focus-events on

# enable vi keys
setw -g mode-keys vi

# esc turns on copy mode
bind Escape copy-mode

# vim like select and copy
bind-key -T copy-mode v send -X begin-selection
bind-key -T copy-mode y send -X copy-selection

# make Prefix p paste the buffer.
unbind p
bind p paste-buffer

# remap previous window
bind b previous-window

# create session
bind C-n new-session

# bind-key X confirm-before -p "Kill #S (y/n)?" "run-shell 'tmux switch-client -n \\\; kill-session -t \"#S\"'"
bind X command-prompt -p "kill:"  "switch-client -n \; kill-session -t '%%'"

# show tmux buffers
bind C-b choose-buffer
# bind B list-buffers
# bind b choose-buffer
 bind C-l send-keys 'C-l'

bind i run-shell "tmux neww -n cheat.sh ~/bin/tmux-cht.sh"

# Log output to a text file on demand
bind P pipe-pane -o "cat >>~/tmux-#W.log" \; display "Toggled logging to ~/tmux-#W.log"

# Load osx specific setting
if-shell "uname | grep -q Darwin" "source-file ~/.config/tmux/tmux.mac.conf"

# load private settings if they exist
if-shell "[ -f ~/.config/tmux/tmux.private ]" "source ~/.config/tmux/tmux.private"


# kanagawa
# command-message-status-style {{{
# set -g message-style 'bg=#282828,fg=yellow,bold'
set -g message-style 'bg=default,fg=yellow,bold'
# set -g status-style  'bg=#282828'
set -g status-style  'bg=default'
# }}}

# Titles {{{
set -g set-titles on
set -g set-titles-string '#{window_index}.#{pane_index} ☞ #{pane_current_command}'
# }}}

# pane-borders {{{
# set -g pane-border-status top
%if "#{!=:$SSH_CONNECTION,}"
set -gF pane-border-style '#{?pane_synchronized,fg=red,fg=blue}'
set -gF pane-active-border-style '#{?pane_synchronized,fg=brightred,fg=yellow}'
%else
set -gF pane-border-style '#{?pane_synchronized,fg=red,fg=white}'
set -gF pane-active-border-style '#{?pane_synchronized,fg=brightred,fg=green}'
%endif
set -g pane-border-format "(#{pane_index}) #{pane_title} → #{pane_current_command}"
# }}}

# mode style {{{
# setw -g mode-style 'bg=green, fg=colour232, bold'
setw -g mode-style 'bg=green, fg=black, bold'
# }}}

# status line {{{
set -g status-interval 4
set -g status-position bottom

GIT_TEAM_STATUS="[$(git-team status | awk 'NR==1';exit)]"
TMUX_PANE_HOME_SHORTENED_PATH="#{s|\\$HOME|~|:pane_current_path}" # replace $HOME with ~ in current_path
%hidden PANE_ALL_SHORTENED_PATH="#{s|(/.)[^/]*|\\1|:$TMUX_PANE_HOME_SHORTENED_PATH}" # transform [~]/aaa/bbbb/ccc to [~]/a/b/c
%hidden PANE_CUR_DIR="#{b:pane_current_path}" # get current directory name (e.g. ccc)
%hidden PANE_SHORTENED_PATH="#{s|/[^/]*$|/$PANE_CUR_DIR|:$PANE_ALL_SHORTENED_PATH}" # transform [~]/a/b/c to [~]/a/b/ccc
%hidden PATH_LEN='#(tmux display-message -p "#{T:TMUX_PANE_HOME_SHORTENED_PATH}" |wc -c)' # get number of charactes in path
%hidden PATH_OVERFLOW="#{e|>:$PATH_LEN,#{e|*|f:#{window_width},0.4}}" # check if path len is > 0.4*{window_width}
#{s|/[^/]*$|#{s|.*(/[^/]*$)|\\1|:pane_current_path}|:#{s|(/.)[^/]*|\\1|:#{s|\\$HOME|~|:pane_current_path}}} "
set -g  status-right "#[bg=default,fg=brightblue] #{?$PATH_OVERFLOW,$PANE_SHORTENED_PATH,$TMUX_PANE_HOME_SHORTENED_PATH} "
set -ga status-right "#[bg=default,fg=brightblue] #(echo $GIT_TEAM_STATUS) "
# set -ga status-right "#[fg=brightblack]@#[bold]#H #{online_status}"
set -g status-right-length 150

    # statusline plugins {{{
set -g @online_icon  "#[fg=brightgreen,none] #[default]"
set -g @offline_icon "#[fg=red,none] #[default]"
    # }}}

    # status left {{{
set -g  status-left '#[fg=black,bold,bg=green]#{pane_mode}#[fg=green,none]'
set -ga status-left '#{?client_prefix,#[bg=#d65c0d],#[bg=default]} #[fg=brightwhite,bold]#S#[fg=none] '
set -ga status-left '#[bg=default]#{?client_prefix,#[fg=#d65c0d] ,#[fg=default]  }'
set -g status-left-length 80
    # }}}
# }}}

# Windows status {{{
setw -g window-status-activity-style fg=yellow
setw -g window-status-bell-style     fg=red
setw -g window-status-format         "#[fg=yellow]#I#[fg=green]#F #[fg=white]#W"
setw -g window-status-current-format "#[fg=brightyellow]#I#[fg=brightgreen]#F #[fg=brightwhite,bold,underscore]#W"
setw -g window-status-separator      "#[fg=brightwhite,bold]  "
# setw -g window-status-last-style default
# setw -g window-status-current-style
# setw -g window-status-style
set -g status-justify left
# }}}
